-if game.errors.any?
  #error_explanation
    %strong= "#{pluralize(game.errors.count, "error")} prohibited this game from being saved:"
    %ol
      - game.errors.full_messages.each do |msg|
        %li= msg


%h3= "Game Board"
%table.player_board{:border => 0, :cellpadding => 0, :cellspacing => 0}
  %tr{:style => "text-align: center"}
    %td{:style => "background-color: #fff"}
    -10.times do |g|
      %td{:style => "background-color: #fff"}
        ="#{g}"
  -10.times do |i|
    %tr.line_one
      %td{:style => "background-color: #fff;padding-right: 2px"}
        ="#{i}"
      -10.times do |k|
        %td.player_placement{:id => "player_board_#{k}_#{i}", :data_x => "#{k}", :data_y => "#{i}", :width => "30px"}
          ="#{k}:#{i}"
%div{:style => "position: absolute; right: 300px; top:170px"}
  %h3 Ship Details
  %strong="Note: Once Ships is placed it can not be moved"
  %div{:style => "float: left; position: absolute"}
    %h4
      ="Orientation : Horizontal"
    %table
      %tr



        %td

        -Ship.all.each do |ship|
          %tr
            -total_ships_game = GameShip.where(:ship_id => ship.id, :game_id => @game.id).count
            -if total_ships_game < ship.max_per_game
              %td
                =ship.name

              -(ship.max_per_game - total_ships_game).times do |i|
                %td
                  .ships{:id => "ship_#{ship.id}",:style => "height: 30px;width: #{ship.length * 30}px; border: 1px solid black; padding: 0; margin: 0; background-color: #6d6969", :ship_id =>ship.id, :orientation => "horizontal", :data_length => ship.length, :game_id => game.id, :max_per_game => ship.max_per_game, :total_ships_game =>total_ships_game}
                    &nbsp;
  %div{:style => "float: right; position: relative; top:19px"}
    %h4
      ="Orientation : Vertical"
    %table
      %tr

        -Ship.all.each do |ship|
          %td
            -total_ships_game = GameShip.where(:ship_id => ship.id, :game_id => @game.id).count
            -if total_ships_game < ship.max_per_game
              %span
                =ship.name

              -(ship.max_per_game - total_ships_game).times do |i|
                %span
                  .ships{:id => "ship_#{ship.id}",:style => "width: 30px;height: #{ship.length * 30}px; border: 1px solid black; padding: 0; margin: 0; background-color: #6d6969", :ship_id =>ship.id, :orientation => "vertical", :data_length => ship.length, :game_id => game.id, :max_per_game => ship.max_per_game, :total_ships_game =>total_ships_game}
                    &nbsp;
                  %br
:javascript
  $(function() {
    ShipsDraggables();
    ShipsDroppables();
  });
%br

#javascript_data{:style => "display:none"}
  #game_ship_ids
    -game_ship_ids = []
    -GameShip.where(:game_id =>@game.id ).each do |game_ship|
      - game_ship_ids << game_ship.id
    =game_ship_ids.join(",")

  #game_ship_x
    -game_ship_x = []
    -GameShip.where(:game_id =>@game.id ).each do |game_ship|
      - game_ship_x << game_ship.x
    =game_ship_x.join(",")
  #game_ship_y
    -game_ship_y = []
    -GameShip.where(:game_id =>@game.id ).each do |game_ship|
      - game_ship_y << game_ship.y
    =game_ship_y.join(",")

  #game_ship_length
    -game_ship_length = []
    -GameShip.where(:game_id =>@game.id ).each do |game_ship|
      - game_ship_length << game_ship.ship.length
    =game_ship_length.join(",")
  #game_ship_orientation
    -game_ship_orientation = []
    -GameShip.where(:game_id =>@game.id ).each do |game_ship|
      - game_ship_orientation << game_ship.orientation
    =game_ship_orientation.join(",")